{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.uri.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/category/category-creator/category-creator.component.ts","./src/app/category/category-creator/category-creator.component.html","./src/app/category/category.component.ts","./src/app/category/category.component.html","./src/app/category/category.http.service.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/category.model.ts","./src/app/models/user.model.ts","./src/app/models/wallet.model.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/register/register.http.service.ts","./src/app/transaction/transaction-creator/transaction-creator.component.ts","./src/app/transaction/transaction-creator/transaction-creator.component.html","./src/app/transaction/transaction.component.ts","./src/app/transaction/transaction.http.service.ts","./src/app/wallet/wallet-creator/wallet-creator.component.ts","./src/app/wallet/wallet-creator/wallet-creator.component.html","./src/app/wallet/wallet-details/wallet-details.component.ts","./src/app/wallet/wallet-details/wallet-details.component.html","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/app/wallet/wallet.http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class ApiUri {\r\n  public static register: string = ApiUri.getBase() + '/register';\r\n  public static login: string = ApiUri.getBase() + '/login';\r\n  public static user: string = ApiUri.getBase() + '/user';\r\n\r\n  public static wallet: string = ApiUri.getBase() + '/wallet';\r\n  public static userWallets: string = ApiUri.wallet;\r\n  public static addWallet: string = ApiUri.wallet + '/add';\r\n\r\n  public static category: string = ApiUri.getBase() + '/category';\r\n  public static addCategory: string = ApiUri.category + '/add';\r\n  public static userCategories: string = ApiUri.category;\r\n\r\n  public static transactionTypes: string = ApiUri.getBase() + '/transaction/types';\r\n\r\n  public static getBase(): string {\r\n    return 'https://home-budget-oziaka.herokuapp.com/';\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Home budget';\n  private protectedRoutes: Array<string> = [\n    '/wallet',\n    '/category'\n  ];\n\n  constructor(private router: Router, private authService: AuthService, private activatedRoute: ActivatedRoute) {\n  }\n\n  userHasAccess() {\n    const routerUrl = this.router.routerState.snapshot.url;\n    if (this.isProtectedRouter(routerUrl) && !this.authService.isAuthenticated()) {\n      this.router.navigateByUrl('/');\n    } else {\n      return true;\n    }\n  }\n\n  private isProtectedRouter(routerUrl: string): boolean {\n    return this.protectedRoutes.some(k => routerUrl.match(k));\n  }\n}\n","<app-navigation></app-navigation>\r\n<div class=\"container\" id=\"content\">\r\n  <router-outlet *ngIf=\"userHasAccess()\"></router-outlet>\r\n</div>\r\n<app-footer></app-footer>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {Injectable, NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RegisterHttpService} from './register/register.http.service';\r\nimport {WalletComponent} from './wallet/wallet.component';\r\nimport {WalletCreatorComponent} from './wallet/wallet-creator/wallet-creator.component';\r\nimport {WalletDetailsComponent} from './wallet/wallet-details/wallet-details.component';\r\nimport {ErrorComponent} from './error/error.component';\r\nimport {TransactionCreatorComponent} from './transaction/transaction-creator/transaction-creator.component';\r\nimport {TransactionComponent} from './transaction/transaction.component';\r\nimport {CategoryComponent} from './category/category.component';\r\nimport {CategoryCreatorComponent} from './category/category-creator/category-creator.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'wallet', component: WalletComponent},\r\n  {path: 'wallet/add', component: WalletCreatorComponent},\r\n  {path: 'wallet/details', component: WalletDetailsComponent},\r\n  {path: 'category', component: CategoryComponent},\r\n  {path: 'category/add', component: CategoryCreatorComponent}\r\n];\r\n\r\n\r\n@Injectable()\r\nexport class XhrInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (localStorage.getItem('email') && localStorage.getItem('basicauth')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: localStorage.getItem('basicauth')\r\n        }\r\n      });\r\n    }\r\n    req = req.clone({\r\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    NavigationComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    WalletComponent,\r\n    WalletCreatorComponent,\r\n    WalletDetailsComponent,\r\n    ErrorComponent,\r\n    TransactionCreatorComponent,\r\n    TransactionComponent,\r\n    CategoryComponent,\r\n    CategoryCreatorComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    RegisterHttpService,\r\n    {provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ApiUri} from './api.uri';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private authenticated = false;\r\n  email: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    return this.authenticated;\r\n  }\r\n\r\n  authenticate(user, callback): void {\r\n    if (localStorage.getItem('email') !== undefined && localStorage.getItem('email') !== null\r\n      && localStorage.getItem('basicauth') !== undefined && localStorage.getItem('basicauth') !== null\r\n      && user === undefined) {\r\n      this.authenticated = true;\r\n      return;\r\n    }\r\n    const authString = user ? 'Basic ' + btoa(user.email + ':' + user.password) : '';\r\n    this.http.get(ApiUri.user, {\r\n      headers: {Authorization: authString}\r\n    }).subscribe(response => {\r\n      try {\r\n        response['name'];\r\n      } catch (e) {\r\n        return undefined;\r\n      }\r\n      if (response['name'] !== null) {\r\n        if (user !== undefined) {\r\n          localStorage.setItem('email', user.email);\r\n          localStorage.setItem('basicauth', authString);\r\n        }\r\n        this.authenticated = true;\r\n        return callback && callback();\r\n      }\r\n      return undefined;\r\n    }, error => {\r\n      this.authenticated = false;\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.clear();\r\n    this.authenticated = false;\r\n  }\r\n\r\n  getEmail() {\r\n    return localStorage.getItem('email');\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../../models/category.model';\nimport {CategoryHttpService} from '../category.http.service';\nimport {TransactionHttpService} from '../../transaction/transaction.http.service';\n\n@Component({\n  selector: 'app-category-creator',\n  templateUrl: './category-creator.component.html',\n  styleUrls: ['./category-creator.component.css']\n})\nexport class CategoryCreatorComponent implements OnInit {\n\n  category: Category = new Category();\n  error: any;\n  transactionTypes: Array<string> = new Array<string>();\n  transactionTypeString: string;\n\n\n  constructor(private categoryHttpService: CategoryHttpService, private transactionHttpService: TransactionHttpService) {\n  }\n\n  ngOnInit(): void {\n    this.transactionHttpService.getTypes().subscribe((success: Array<string>) => {\n      this.transactionTypes = success.map(k => k.substring(0, 1) + k.substring(1, k.length).toLowerCase().replace('_', ' '));\n      this.transactionTypeString = this.transactionTypes[0];\n    });\n  }\n\n\n  addCategory() {\n    this.category.transactionType = this.transactionTypeString.toUpperCase().replace(' ', '_');\n    this.categoryHttpService.addCategory(this.category).subscribe(success => {\n        console.log(success);\n      },\n      error => {\n        this.error = error.error.errors;\n      });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"addCategory()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input [(ngModel)]=\"category.name\" class=\"form-control\" name=\"name\" type=\"text\">\n        <error [errorsList]=\"error?.name\"></error>\n      </div>\n      <div class=\"form-group\">\n        <label>Description</label>\n        <input [(ngModel)]=\"category.description\" class=\"form-control\" name=\"password\" type=\"balance\">\n        <error [errorsList]=\"error?.description\"></error>\n      </div>\n      <div class=\"form-group\">\n        <label>Select transaction type</label>\n        <select [(ngModel)]=\"transactionTypeString\" class=\"form-control\" name=\"transactionType\">\n          <option *ngFor=\"let transactionType of transactionTypes\" [value]=\"transactionType\">\n            {{transactionType}}\n          </option>\n        </select>\n      </div>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../models/category.model';\nimport {CategoryHttpService} from './category.http.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  categories: Array<Category>;\n\n\n  constructor(private categoryHttpService: CategoryHttpService) {\n    this.getCategories();\n  }\n\n  ngOnInit(): void {\n  }\n\n  private getCategories() {\n    this.categoryHttpService.getCategories().subscribe(success => {\n      console.log(success);\n      this.categories = success;\n    }, error => {\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <div *ngIf=\"categories.length >0;else noCategories\">\n      <h3 class=\"text-center text-vertical-center\">Wallet list</h3>\n      <table class=\"table table-hover table-striped text-center\">\n        <tr>\n          <th></th>\n          <th>Name</th>\n          <th>Balance</th>\n        </tr>\n        <tr *ngFor=\"let category of categories; let i = index\">\n          <td>\n            <a class=\"text-decoration-none text-black\"\n               role=\"button\"> {{i + 1}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.name}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.description}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.transactionType}}</a></td>\n        </tr>\n      </table>\n    </div>\n    <ng-template #noCategories>\n      <h3 class=\"text-center\">You do not have any category</h3>\n    </ng-template>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ApiUri} from '../api.uri';\nimport {Category} from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryHttpService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  addCategory(category: Category): Observable<any> {\n    return this.http.put(ApiUri.addCategory, category);\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get(ApiUri.userCategories);\n  }\n}\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n\n  @Input() errorsList: any;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n}\n","<ul *ngIf=\"errorsList?.length \">\n  <li *ngFor=\" let error of errorsList\">{{error}}</li>\n</ul>\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\" bg-success text-white clearfix\">\r\n  <div class=\"container\">\r\n    <div class=\"row p-3 text-center\">\r\n      <div class=\"footer-content col-4 offset-2 border-right\">\r\n        Witam to jest stopka tej stronki :)\r\n      </div>\r\n      <div class=\"footer-content col-4\">\r\n        Witam to też jest stopka tej stronki\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {User} from '../models/user.model';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: User = new User();\n\n  emailErrors: Array<string> = new Array<string>();\n  passwordErrors: Array<string> = new Array<string>();\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.authService.authenticate(this.user, () => {\n      this.router.navigateByUrl('/');\n    });\n    return false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"login()\">\n      <div class=\"form-group\">\n        <label>Email address</label>\n        <input [(ngModel)]=\"user.email\" class=\"form-control\" name=\"name\" type=\"email\">\n        <ul *ngIf=\"emailErrors?.length\">\n          <li *ngFor=\" let emailError of emailErrors\">{{emailError}}</li>\n        </ul>\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input [(ngModel)]=\"user.password\" class=\"form-control\" name=\"password\" type=\"password\">\n        <ul *ngIf=\"passwordErrors?.length \">\n          <li *ngFor=\" let passwordError of passwordErrors\">{{passwordError}}</li>\n        </ul>\n      </div>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","export class Category {\n  description: string;\n  id: number;\n  name: string;\n  transactionType: string;\n}\n","export class User {\n  public email: string;\n  public password: string;\n}\n\n","import {Transaction} from './transaction.model';\n\nexport class Wallet {\n  public name: string;\n  public balance: bigint;\n  public id: bigint;\n  public transactions: Array<Transaction>;\n}\n","import {Component, OnChanges, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit, OnChanges {\r\n\r\n\r\n  constructor(private auth: AuthService) {\r\n    auth.authenticate(undefined, undefined);\r\n  }\r\n\r\n  isAuth() {\r\n    return this.auth.isAuthenticated();\r\n  }\r\n\r\n\r\n  getEmail(): string {\r\n    return this.auth.getEmail();\r\n  }\r\n\r\n  logout(): void {\r\n    this.auth.logout();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-success\">\r\n\r\n  <button class=\"navbar-toggler right\" data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <!--  When user is not authenticated-->\r\n  <div *ngIf=\"!isAuth()\" class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Home</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <form class=\"form-inline\">\r\n      <h5 class=\"p-0 m-0 text-white\">Hi Guest!</h5>\r\n      <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"register\">Register</a>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <!--When user is authenticated-->\r\n  <div *ngIf=\"isAuth()\" class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Home</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\">\r\n          Wallet\r\n        </a>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item\" routerLink=\"/wallet\">Wallets list</a>\r\n          <a class=\"dropdown-item\" routerLink=\"/wallet/add\">Add wallet</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\">\r\n          Category\r\n        </a>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item\" routerLink=\"/category\">Categories list</a>\r\n          <a class=\"dropdown-item\" routerLink=\"/category/add\">Add category</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Friends</a>\r\n      </li>\r\n\r\n    </ul>\r\n\r\n    <form class=\"form-inline\">\r\n      <h5 class=\"p-0 m-0 text-white\">{{\"Hi \" + getEmail()}}</h5>\r\n      <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n        <li class=\"nav-item\">\r\n          <a (click)=\"logout()\" class=\"nav-link\" href=\"#\" role=\"button\">Logout</a>\r\n        </li>\r\n      </ul>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</nav>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {RegisterHttpService} from './register.http.service';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: User = new User();\r\n  errors: any;\r\n\r\n  constructor(private registerHttpService: RegisterHttpService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  registerUser() {\r\n    this.registerHttpService.registerUser(this.user).subscribe(post => {\r\n      this.router.navigate(['/login']);\r\n    }, error => {\r\n      this.errors = error.error.errors;\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-6 offset-3\">\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label>Email address</label>\r\n        <input [(ngModel)]=\"user.email\" class=\"form-control\" name=\"name\" type=\"email\">\r\n        <error [errorsList]=\"errors?.email\"></error>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input [(ngModel)]=\"user.password\" class=\"form-control\" name=\"password\" type=\"password\">\r\n        <error [errorsList]=\"errors?.password \"></error>\r\n      </div>\r\n      <button (click)=\"registerUser()\" class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiUri} from '../api.uri';\nimport {Observable} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {User} from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterHttpService {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  public registerUser(user: User): Observable<any> {\n    return this.http.post(ApiUri.register, user);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-transaction-creator',\n  templateUrl: './transaction-creator.component.html',\n  styleUrls: ['./transaction-creator.component.css']\n})\nexport class TransactionCreatorComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>transaction-creator works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../models/category.model';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n  categories: Array<Category>;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  showDetails(id: any) {\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiUri} from '../api.uri';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionHttpService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getTypes() {\n    return this.http.get(ApiUri.transactionTypes);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Wallet} from '../../models/wallet.model';\nimport {WalletHttpService} from '../wallet.http.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-wallet-creator',\n  templateUrl: './wallet-creator.component.html',\n  styleUrls: ['./wallet-creator.component.css']\n})\nexport class WalletCreatorComponent implements OnInit {\n\n  wallet: Wallet = new Wallet();\n  error: any;\n\n  constructor(private router: Router, private walletHttpService: WalletHttpService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  addWallet() {\n    this.walletHttpService.addWallet(this.wallet).subscribe(success => {\n        this.router.navigateByUrl('/wallet/details?id=' + success.id);\n      },\n      error => {\n        this.error = error.error.errors;\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"addWallet()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input [(ngModel)]=\"wallet.name\" class=\"form-control\" name=\"name\" type=\"text\">\n      </div>\n      <error [errorsList]=\"error?.name\"></error>\n      <div class=\"form-group\">\n        <label>Balance</label>\n        <input [(ngModel)]=\"wallet.balance\" class=\"form-control\" name=\"password\" type=\"balance\">\n      </div>\n      <error [errorsList]=\"error?.balance\"></error>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {WalletHttpService} from '../wallet.http.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Wallet} from '../../models/wallet.model';\n\n@Component({\n  selector: 'app-wallet-details',\n  templateUrl: './wallet-details.component.html',\n  styleUrls: ['./wallet-details.component.css']\n})\nexport class WalletDetailsComponent implements OnInit {\n\n  public wallet: Wallet;\n  private id: number;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private walletHttpService: WalletHttpService) {\n  }\n\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.id = params['id'];\n      });\n    this.getWallet();\n  }\n\n  addTransaction() {\n\n  }\n\n  private getWallet() {\n    this.walletHttpService.getWalletWithDetails(this.id).subscribe(k => {\n      this.wallet = k;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <h1>{{wallet?.name}}</h1>\n    <h1>{{wallet?.balance}}</h1>\n    <h1 *ngFor=\"let transaction of wallet?.transactions\">\n\n    </h1>\n  </div>\n  <div class=\"col-md-1 offset-md-1\">\n    <a (click)=\"addTransaction()\" class=\"add-button\" role=\"button\">\n      Dodaj transakcję\n      <img src=\"/assets/icon/plus-icon.png\"/>\n    </a></div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {Wallet} from '../models/wallet.model';\r\nimport {WalletHttpService} from './wallet.http.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-wallet-creator',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.css']\r\n})\r\nexport class WalletComponent implements OnInit {\r\n  wallets: Array<Wallet>;\r\n\r\n  constructor(private http: HttpClient, private walletHttpService: WalletHttpService, private router: Router) {\r\n    this.getWallets();\r\n  }\r\n\r\n\r\n  getWallets(): void {\r\n    this.walletHttpService.getWallets().subscribe(success => {\r\n      this.wallets = success;\r\n    }, error => {\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  showWalletsDetails(id: number) {\r\n    this.router.navigateByUrl('/wallet/details?id=' + id);\r\n  }\r\n}\r\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <div *ngIf=\"wallets.length > 0;else noWallets\">\n      <h3 class=\"text-center text-vertical-center\">Wallet list</h3>\n      <table class=\"table table-hover table-striped text-center\">\n        <tr>\n          <th></th>\n          <th>Name</th>\n          <th>Balance</th>\n        </tr>\n        <tr *ngFor=\"let wallet of wallets; let i = index\">\n          <td>\n            <a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n               role=\"button\"> {{i + 1}}</a></td>\n          <td><a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{wallet.name}}</a></td>\n          <td><a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{wallet.balance}}</a></td>\n        </tr>\n      </table>\n    </div>\n    <ng-template #noWallets>\n      <h3 class=\"text-center\">You do not have any wallet</h3>\n    </ng-template>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ApiUri} from '../api.uri';\r\nimport {Wallet} from '../models/wallet.model';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletHttpService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) {\r\n  }\r\n\r\n  addWallet(wallet: Wallet): Observable<any> {\r\n    return this.http.post(ApiUri.addWallet, wallet);\r\n  }\r\n\r\n  getWallets(): Observable<any> {\r\n    return this.http.get(ApiUri.userWallets);\r\n  }\r\n\r\n  getWalletWithDetails(id: number): Observable<any> {\r\n    return this.http.get(ApiUri.wallet + '/' + id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}