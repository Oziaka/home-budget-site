{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.uri.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/category/category-creator/category-creator.component.ts","webpack:///src/app/category/category-creator/category-creator.component.html","webpack:///src/app/category/category.component.ts","webpack:///src/app/category/category.component.html","webpack:///src/app/category/category.http.service.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/category.model.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/models/wallet.model.ts","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.http.service.ts","webpack:///src/app/transaction/transaction-creator/transaction-creator.component.ts","webpack:///src/app/transaction/transaction-creator/transaction-creator.component.html","webpack:///src/app/transaction/transaction.component.ts","webpack:///src/app/transaction/transaction.http.service.ts","webpack:///src/app/wallet/wallet-creator/wallet-creator.component.ts","webpack:///src/app/wallet/wallet-creator/wallet-creator.component.html","webpack:///src/app/wallet/wallet-details/wallet-details.component.ts","webpack:///src/app/wallet/wallet-details/wallet-details.component.html","webpack:///src/app/wallet/wallet.component.ts","webpack:///src/app/wallet/wallet.component.html","webpack:///src/app/wallet/wallet.http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiUri","register","getBase","login","user","wallet","userWallets","addWallet","category","addCategory","userCategories","transactionTypes","AppComponent","router","authService","activatedRoute","title","protectedRoutes","routerUrl","routerState","snapshot","url","isProtectedRouter","isAuthenticated","navigateByUrl","some","k","match","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","XhrInterceptor","next","localStorage","getItem","clone","setHeaders","Authorization","headers","set","handle","AppModule","provide","useClass","multi","forRoot","declarations","imports","providers","bootstrap","AuthService","http","authenticated","callback","undefined","authString","btoa","email","password","get","subscribe","response","setItem","error","clear","providedIn","CategoryCreatorComponent","categoryHttpService","transactionHttpService","Array","getTypes","success","map","substring","length","toLowerCase","replace","transactionTypeString","transactionType","toUpperCase","console","log","errors","CategoryComponent","getCategories","categories","CategoryHttpService","put","ErrorComponent","FooterComponent","HomeComponent","LoginComponent","route","emailErrors","passwordErrors","authenticate","Category","User","Wallet","NavigationComponent","auth","getEmail","logout","RegisterComponent","registerHttpService","registerUser","post","navigate","RegisterHttpService","TransactionCreatorComponent","TransactionComponent","TransactionHttpService","WalletCreatorComponent","walletHttpService","WalletDetailsComponent","queryParams","params","getWallet","getWalletWithDetails","addTransaction","WalletComponent","getWallets","wallets","WalletHttpService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class ApiUri {\r\n  public static register: string = ApiUri.getBase() + '/register';\r\n  public static login: string = ApiUri.getBase() + '/login';\r\n  public static user: string = ApiUri.getBase() + '/user';\r\n\r\n  public static wallet: string = ApiUri.getBase() + '/wallet';\r\n  public static userWallets: string = ApiUri.wallet;\r\n  public static addWallet: string = ApiUri.wallet + '/add';\r\n\r\n  public static category: string = ApiUri.getBase() + '/category';\r\n  public static addCategory: string = ApiUri.category + '/add';\r\n  public static userCategories: string = ApiUri.category;\r\n\r\n  public static transactionTypes: string = ApiUri.getBase() + '/transaction/types';\r\n\r\n  public static getBase(): string {\r\n    return 'https://home-budget-oziaka.herokuapp.com/';\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Home budget';\n  private protectedRoutes: Array<string> = [\n    '/wallet',\n    '/category'\n  ];\n\n  constructor(private router: Router, private authService: AuthService, private activatedRoute: ActivatedRoute) {\n  }\n\n  userHasAccess() {\n    const routerUrl = this.router.routerState.snapshot.url;\n    if (this.isProtectedRouter(routerUrl) && !this.authService.isAuthenticated()) {\n      this.router.navigateByUrl('/');\n    } else {\n      return true;\n    }\n  }\n\n  private isProtectedRouter(routerUrl: string): boolean {\n    return this.protectedRoutes.some(k => routerUrl.match(k));\n  }\n}\n","<app-navigation></app-navigation>\r\n<div class=\"container\" id=\"content\">\r\n  <router-outlet *ngIf=\"userHasAccess()\"></router-outlet>\r\n</div>\r\n<app-footer></app-footer>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {Injectable, NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {NavigationComponent} from './navigation/navigation.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RegisterHttpService} from './register/register.http.service';\r\nimport {WalletComponent} from './wallet/wallet.component';\r\nimport {WalletCreatorComponent} from './wallet/wallet-creator/wallet-creator.component';\r\nimport {WalletDetailsComponent} from './wallet/wallet-details/wallet-details.component';\r\nimport {ErrorComponent} from './error/error.component';\r\nimport {TransactionCreatorComponent} from './transaction/transaction-creator/transaction-creator.component';\r\nimport {TransactionComponent} from './transaction/transaction.component';\r\nimport {CategoryComponent} from './category/category.component';\r\nimport {CategoryCreatorComponent} from './category/category-creator/category-creator.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'wallet', component: WalletComponent},\r\n  {path: 'wallet/add', component: WalletCreatorComponent},\r\n  {path: 'wallet/details', component: WalletDetailsComponent},\r\n  {path: 'category', component: CategoryComponent},\r\n  {path: 'category/add', component: CategoryCreatorComponent}\r\n];\r\n\r\n\r\n@Injectable()\r\nexport class XhrInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (localStorage.getItem('email') && localStorage.getItem('basicauth')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: localStorage.getItem('basicauth')\r\n        }\r\n      });\r\n    }\r\n    req = req.clone({\r\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    NavigationComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    WalletComponent,\r\n    WalletCreatorComponent,\r\n    WalletDetailsComponent,\r\n    ErrorComponent,\r\n    TransactionCreatorComponent,\r\n    TransactionComponent,\r\n    CategoryComponent,\r\n    CategoryCreatorComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    RegisterHttpService,\r\n    {provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ApiUri} from './api.uri';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private authenticated = false;\r\n  email: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    return this.authenticated;\r\n  }\r\n\r\n  authenticate(user, callback): void {\r\n    if (localStorage.getItem('email') !== undefined && localStorage.getItem('email') !== null\r\n      && localStorage.getItem('basicauth') !== undefined && localStorage.getItem('basicauth') !== null\r\n      && user === undefined) {\r\n      this.authenticated = true;\r\n      return;\r\n    }\r\n    const authString = user ? 'Basic ' + btoa(user.email + ':' + user.password) : '';\r\n    this.http.get(ApiUri.user, {\r\n      headers: {Authorization: authString}\r\n    }).subscribe(response => {\r\n      try {\r\n        response['name'];\r\n      } catch (e) {\r\n        return undefined;\r\n      }\r\n      if (response['name'] !== null) {\r\n        if (user !== undefined) {\r\n          localStorage.setItem('email', user.email);\r\n          localStorage.setItem('basicauth', authString);\r\n        }\r\n        this.authenticated = true;\r\n        return callback && callback();\r\n      }\r\n      return undefined;\r\n    }, error => {\r\n      this.authenticated = false;\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.clear();\r\n    this.authenticated = false;\r\n  }\r\n\r\n  getEmail() {\r\n    return localStorage.getItem('email');\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../../models/category.model';\nimport {CategoryHttpService} from '../category.http.service';\nimport {TransactionHttpService} from '../../transaction/transaction.http.service';\n\n@Component({\n  selector: 'app-category-creator',\n  templateUrl: './category-creator.component.html',\n  styleUrls: ['./category-creator.component.css']\n})\nexport class CategoryCreatorComponent implements OnInit {\n\n  category: Category = new Category();\n  error: any;\n  transactionTypes: Array<string> = new Array<string>();\n  transactionTypeString: string;\n\n\n  constructor(private categoryHttpService: CategoryHttpService, private transactionHttpService: TransactionHttpService) {\n  }\n\n  ngOnInit(): void {\n    this.transactionHttpService.getTypes().subscribe((success: Array<string>) => {\n      this.transactionTypes = success.map(k => k.substring(0, 1) + k.substring(1, k.length).toLowerCase().replace('_', ' '));\n      this.transactionTypeString = this.transactionTypes[0];\n    });\n  }\n\n\n  addCategory() {\n    this.category.transactionType = this.transactionTypeString.toUpperCase().replace(' ', '_');\n    this.categoryHttpService.addCategory(this.category).subscribe(success => {\n        console.log(success);\n      },\n      error => {\n        this.error = error.error.errors;\n      });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"addCategory()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input [(ngModel)]=\"category.name\" class=\"form-control\" name=\"name\" type=\"text\">\n        <error [errorsList]=\"error?.name\"></error>\n      </div>\n      <div class=\"form-group\">\n        <label>Description</label>\n        <input [(ngModel)]=\"category.description\" class=\"form-control\" name=\"password\" type=\"balance\">\n        <error [errorsList]=\"error?.description\"></error>\n      </div>\n      <div class=\"form-group\">\n        <label>Select transaction type</label>\n        <select [(ngModel)]=\"transactionTypeString\" class=\"form-control\" name=\"transactionType\">\n          <option *ngFor=\"let transactionType of transactionTypes\" [value]=\"transactionType\">\n            {{transactionType}}\n          </option>\n        </select>\n      </div>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../models/category.model';\nimport {CategoryHttpService} from './category.http.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  categories: Array<Category>;\n\n\n  constructor(private categoryHttpService: CategoryHttpService) {\n    this.getCategories();\n  }\n\n  ngOnInit(): void {\n  }\n\n  private getCategories() {\n    this.categoryHttpService.getCategories().subscribe(success => {\n      console.log(success);\n      this.categories = success;\n    }, error => {\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <div *ngIf=\"categories.length >0;else noCategories\">\n      <h3 class=\"text-center text-vertical-center\">Wallet list</h3>\n      <table class=\"table table-hover table-striped text-center\">\n        <tr>\n          <th></th>\n          <th>Name</th>\n          <th>Balance</th>\n        </tr>\n        <tr *ngFor=\"let category of categories; let i = index\">\n          <td>\n            <a class=\"text-decoration-none text-black\"\n               role=\"button\"> {{i + 1}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.name}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.description}}</a></td>\n          <td><a class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{category.transactionType}}</a></td>\n        </tr>\n      </table>\n    </div>\n    <ng-template #noCategories>\n      <h3 class=\"text-center\">You do not have any category</h3>\n    </ng-template>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ApiUri} from '../api.uri';\nimport {Category} from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryHttpService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  addCategory(category: Category): Observable<any> {\n    return this.http.put(ApiUri.addCategory, category);\n  }\n\n  getCategories(): Observable<any> {\n    return this.http.get(ApiUri.userCategories);\n  }\n}\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n\n  @Input() errorsList: any;\n\n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n}\n","<ul *ngIf=\"errorsList?.length \">\n  <li *ngFor=\" let error of errorsList\">{{error}}</li>\n</ul>\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\" bg-success text-white clearfix\">\r\n  <div class=\"container\">\r\n    <div class=\"row p-3 text-center\">\r\n      <div class=\"footer-content col-4 offset-2 border-right\">\r\n        Witam to jest stopka tej stronki :)\r\n      </div>\r\n      <div class=\"footer-content col-4\">\r\n        Witam to też jest stopka tej stronki\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {User} from '../models/user.model';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: User = new User();\n\n  emailErrors: Array<string> = new Array<string>();\n  passwordErrors: Array<string> = new Array<string>();\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.authService.authenticate(this.user, () => {\n      this.router.navigateByUrl('/');\n    });\n    return false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"login()\">\n      <div class=\"form-group\">\n        <label>Email address</label>\n        <input [(ngModel)]=\"user.email\" class=\"form-control\" name=\"name\" type=\"email\">\n        <ul *ngIf=\"emailErrors?.length\">\n          <li *ngFor=\" let emailError of emailErrors\">{{emailError}}</li>\n        </ul>\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input [(ngModel)]=\"user.password\" class=\"form-control\" name=\"password\" type=\"password\">\n        <ul *ngIf=\"passwordErrors?.length \">\n          <li *ngFor=\" let passwordError of passwordErrors\">{{passwordError}}</li>\n        </ul>\n      </div>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","export class Category {\n  description: string;\n  id: number;\n  name: string;\n  transactionType: string;\n}\n","export class User {\n  public email: string;\n  public password: string;\n}\n\n","import {Transaction} from './transaction.model';\n\nexport class Wallet {\n  public name: string;\n  public balance: bigint;\n  public id: bigint;\n  public transactions: Array<Transaction>;\n}\n","import {Component, OnChanges, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit, OnChanges {\r\n\r\n\r\n  constructor(private auth: AuthService) {\r\n    auth.authenticate(undefined, undefined);\r\n  }\r\n\r\n  isAuth() {\r\n    return this.auth.isAuthenticated();\r\n  }\r\n\r\n\r\n  getEmail(): string {\r\n    return this.auth.getEmail();\r\n  }\r\n\r\n  logout(): void {\r\n    this.auth.logout();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-success\">\r\n\r\n  <button class=\"navbar-toggler right\" data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <!--  When user is not authenticated-->\r\n  <div *ngIf=\"!isAuth()\" class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Home</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <form class=\"form-inline\">\r\n      <h5 class=\"p-0 m-0 text-white\">Hi Guest!</h5>\r\n      <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"register\">Register</a>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <!--When user is authenticated-->\r\n  <div *ngIf=\"isAuth()\" class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Home</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\">\r\n          Wallet\r\n        </a>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item\" routerLink=\"/wallet\">Wallets list</a>\r\n          <a class=\"dropdown-item\" routerLink=\"/wallet/add\">Add wallet</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\">\r\n          Category\r\n        </a>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item\" routerLink=\"/category\">Categories list</a>\r\n          <a class=\"dropdown-item\" routerLink=\"/category/add\">Add category</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"\">Friends</a>\r\n      </li>\r\n\r\n    </ul>\r\n\r\n    <form class=\"form-inline\">\r\n      <h5 class=\"p-0 m-0 text-white\">{{\"Hi \" + getEmail()}}</h5>\r\n      <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n        <li class=\"nav-item\">\r\n          <a (click)=\"logout()\" class=\"nav-link\" href=\"#\" role=\"button\">Logout</a>\r\n        </li>\r\n      </ul>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</nav>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {RegisterHttpService} from './register.http.service';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: User = new User();\r\n  errors: any;\r\n\r\n  constructor(private registerHttpService: RegisterHttpService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  registerUser() {\r\n    this.registerHttpService.registerUser(this.user).subscribe(post => {\r\n      this.router.navigate(['/login']);\r\n    }, error => {\r\n      this.errors = error.error.errors;\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-6 offset-3\">\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label>Email address</label>\r\n        <input [(ngModel)]=\"user.email\" class=\"form-control\" name=\"name\" type=\"email\">\r\n        <error [errorsList]=\"errors?.email\"></error>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input [(ngModel)]=\"user.password\" class=\"form-control\" name=\"password\" type=\"password\">\r\n        <error [errorsList]=\"errors?.password \"></error>\r\n      </div>\r\n      <button (click)=\"registerUser()\" class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiUri} from '../api.uri';\nimport {Observable} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {User} from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterHttpService {\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  public registerUser(user: User): Observable<any> {\n    return this.http.post(ApiUri.register, user);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-transaction-creator',\n  templateUrl: './transaction-creator.component.html',\n  styleUrls: ['./transaction-creator.component.css']\n})\nexport class TransactionCreatorComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>transaction-creator works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../models/category.model';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n  categories: Array<Category>;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  showDetails(id: any) {\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiUri} from '../api.uri';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionHttpService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getTypes() {\n    return this.http.get(ApiUri.transactionTypes);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Wallet} from '../../models/wallet.model';\nimport {WalletHttpService} from '../wallet.http.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-wallet-creator',\n  templateUrl: './wallet-creator.component.html',\n  styleUrls: ['./wallet-creator.component.css']\n})\nexport class WalletCreatorComponent implements OnInit {\n\n  wallet: Wallet = new Wallet();\n  error: any;\n\n  constructor(private router: Router, private walletHttpService: WalletHttpService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  addWallet() {\n    this.walletHttpService.addWallet(this.wallet).subscribe(success => {\n        this.router.navigateByUrl('/wallet/details?id=' + success.id);\n      },\n      error => {\n        this.error = error.error.errors;\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-3\">\n    <form (ngSubmit)=\"addWallet()\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input [(ngModel)]=\"wallet.name\" class=\"form-control\" name=\"name\" type=\"text\">\n      </div>\n      <error [errorsList]=\"error?.name\"></error>\n      <div class=\"form-group\">\n        <label>Balance</label>\n        <input [(ngModel)]=\"wallet.balance\" class=\"form-control\" name=\"password\" type=\"balance\">\n      </div>\n      <error [errorsList]=\"error?.balance\"></error>\n      <button class=\"btn btn-block btn-outline-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {WalletHttpService} from '../wallet.http.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Wallet} from '../../models/wallet.model';\n\n@Component({\n  selector: 'app-wallet-details',\n  templateUrl: './wallet-details.component.html',\n  styleUrls: ['./wallet-details.component.css']\n})\nexport class WalletDetailsComponent implements OnInit {\n\n  public wallet: Wallet;\n  private id: number;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private walletHttpService: WalletHttpService) {\n  }\n\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.id = params['id'];\n      });\n    this.getWallet();\n  }\n\n  addTransaction() {\n\n  }\n\n  private getWallet() {\n    this.walletHttpService.getWalletWithDetails(this.id).subscribe(k => {\n      this.wallet = k;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <h1>{{wallet?.name}}</h1>\n    <h1>{{wallet?.balance}}</h1>\n    <h1 *ngFor=\"let transaction of wallet?.transactions\">\n\n    </h1>\n  </div>\n  <div class=\"col-md-1 offset-md-1\">\n    <a (click)=\"addTransaction()\" class=\"add-button\" role=\"button\">\n      Dodaj transakcję\n      <img src=\"/assets/icon/plus-icon.png\"/>\n    </a></div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {Wallet} from '../models/wallet.model';\r\nimport {WalletHttpService} from './wallet.http.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-wallet-creator',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.css']\r\n})\r\nexport class WalletComponent implements OnInit {\r\n  wallets: Array<Wallet>;\r\n\r\n  constructor(private http: HttpClient, private walletHttpService: WalletHttpService, private router: Router) {\r\n    this.getWallets();\r\n  }\r\n\r\n\r\n  getWallets(): void {\r\n    this.walletHttpService.getWallets().subscribe(success => {\r\n      this.wallets = success;\r\n    }, error => {\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  showWalletsDetails(id: number) {\r\n    this.router.navigateByUrl('/wallet/details?id=' + id);\r\n  }\r\n}\r\n","<div class=\"row\">\n  <div class=\"col-md-6 offset-md-3\">\n    <div *ngIf=\"wallets.length > 0;else noWallets\">\n      <h3 class=\"text-center text-vertical-center\">Wallet list</h3>\n      <table class=\"table table-hover table-striped text-center\">\n        <tr>\n          <th></th>\n          <th>Name</th>\n          <th>Balance</th>\n        </tr>\n        <tr *ngFor=\"let wallet of wallets; let i = index\">\n          <td>\n            <a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n               role=\"button\"> {{i + 1}}</a></td>\n          <td><a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{wallet.name}}</a></td>\n          <td><a (click)=\"showWalletsDetails(wallet.id)\" class=\"text-decoration-none text-black\"\n                 role=\"button\"> {{wallet.balance}}</a></td>\n        </tr>\n      </table>\n    </div>\n    <ng-template #noWallets>\n      <h3 class=\"text-center\">You do not have any wallet</h3>\n    </ng-template>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ApiUri} from '../api.uri';\r\nimport {Wallet} from '../models/wallet.model';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletHttpService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) {\r\n  }\r\n\r\n  addWallet(wallet: Wallet): Observable<any> {\r\n    return this.http.post(ApiUri.addWallet, wallet);\r\n  }\r\n\r\n  getWallets(): Observable<any> {\r\n    return this.http.get(ApiUri.userWallets);\r\n  }\r\n\r\n  getWalletWithDetails(id: number): Observable<any> {\r\n    return this.http.get(ApiUri.wallet + '/' + id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}